CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(rgbd-grabber)

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED ON)
SET(Boost_USE_STATIC_RUNTIME OFF)
FIND_PACKAGE(Boost REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE(PCL REQUIRED)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(/usr/include)
INCLUDE_DIRECTORIES(/usr/local/include)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PCL_INCLUDE_DIRS})

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib)
LINK_DIRECTORIES(/usr/lib)
LINK_DIRECTORIES(/usr/local/lib)
LINK_DIRECTORIES(${PCL_LIBRARY_DIRS})

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib)
SET(CMAKE_CXX_FLAGS "-std=c++0x -fpermissive -Wno-deprecated -Wno-sign-compare")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -Wall")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
SET(CMAKE_CXX_LINK_FLAGS_DEBUG "-pg")

ADD_DEFINITIONS(${PCL_DEFINITIONS})

SET(VERSION "0.4.0")
SET(SOVERSION "0.4")

SET(SRC
  src/camera/Camera.cpp src/camera/DepthCamera.cpp src/camera/UVCamera.cpp)

SET(SRC_DS
  src/camera/DS325.cpp)

SET(SRC_PMD
  src/camera/PMDNano.cpp)

SET(SRC_UEYE
  src/camera/UEye.cpp src/camera/ueye_cam_driver.cpp)

SET(LIB_EXTERNAL
  ${Boost_LIBRARIES} ${OpenCV_LIBS} ${PCL_LIBRARIES})

ADD_LIBRARY(rgbd-grabber SHARED ${SRC})
TARGET_LINK_LIBRARIES(rgbd-grabber ${LIB_EXTERNAL})
SET_TARGET_PROPERTIES(rgbd-grabber PROPERTIES VERSION ${VERSION} SOVERSION ${SOVERSION})

SET(LIB
  rgbd-grabber ${LIB_EXTERNAL})

ADD_EXECUTABLE(UVCameraCapture example/UVCameraCapture.cpp)
ADD_DEPENDENCIES(UVCameraCapture ${SRC})
TARGET_LINK_LIBRARIES(UVCameraCapture ${LIB})
INSTALL(TARGETS rgbd-grabber LIBRARY DESTINATION lib)
INSTALL(DIRECTORY include/rgbd DESTINATION include)

OPTION(USE_DS "Use DepthSense DS325 camera" OFF)
IF(USE_DS)
  INCLUDE_DIRECTORIES(/opt/softkinetic/DepthSenseSDK/include)
  LINK_DIRECTORIES(/opt/softkinetic/DepthSenseSDK/lib)
  ADD_LIBRARY(rgbd-grabber-ds SHARED ${SRC_DS})
  TARGET_LINK_LIBRARIES(rgbd-grabber-ds ${LIB})
  SET_TARGET_PROPERTIES(rgbd-grabber-ds PROPERTIES VERSION ${VERSION} SOVERSION ${SOVERSION})
  ADD_EXECUTABLE(DS325Capture example/DS325Capture.cpp)
  ADD_DEPENDENCIES(DS325Capture ${SRC} ${SRC_DS})
  TARGET_LINK_LIBRARIES(DS325Capture ${LIB} rgbd-grabber-ds DepthSense DepthSensePlugins)
  INSTALL(TARGETS rgbd-grabber-ds LIBRARY DESTINATION lib)
ENDIF()

OPTION(USE_PMD "Use PMD Nano camera" OFF)
IF(USE_PMD)
  ADD_LIBRARY(rgbd-grabber-pmd SHARED ${SRC_PMD})
  TARGET_LINK_LIBRARIES(rgbd-grabber-pmd ${LIB})
  SET_TARGET_PROPERTIES(rgbd-grabber-pmd PROPERTIES VERSION ${VERSION} SOVERSION ${SOVERSION})
  ADD_EXECUTABLE(PMDNanoCapture example/PMDNanoCapture.cpp)
  ADD_DEPENDENCIES(PMDNanoCapture ${SRC} ${SRC_PMD})
  TARGET_LINK_LIBRARIES(PMDNanoCapture ${LIB} rgbd-grabber-pmd pmdaccess2)
  INSTALL(TARGETS rgbd-grabber-pmd LIBRARY DESTINATION lib)
ENDIF()

OPTION(USE_UEYE "Use uEye camera" OFF)
IF(USE_UEYE)
  ADD_LIBRARY(rgbd-grabber-ueye SHARED ${SRC_UEYE})
  TARGET_LINK_LIBRARIES(rgbd-grabber-ueye ${LIB})
  SET_TARGET_PROPERTIES(rgbd-grabber-ueye PROPERTIES VERSION ${VERSION} SOVERSION ${SOVERSION})
  ADD_EXECUTABLE(UEyeCapture example/UEyeCapture.cpp)
  ADD_DEPENDENCIES(UEyeCapture ${SRC} ${SRC_UEYE})
  TARGET_LINK_LIBRARIES(UEyeCapture ${LIB} rgbd-grabber-ueye ueye_api)
  INSTALL(TARGETS rgbd-grabber-ueye LIBRARY DESTINATION lib)
ENDIF()
